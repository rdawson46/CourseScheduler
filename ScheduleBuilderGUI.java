/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ryan Crooks
 */


public class ScheduleBuilderGUI extends javax.swing.JFrame {
    
    private String currentSemester;
    private StudentEntry currentStudent;
    private CourseEntry currentCourse;
    
    /**
     * Creates new form ScheduleBuilderGUI
     */
    public ScheduleBuilderGUI() {
        initComponents();
        
        // semester combo box
        rebuildSemesterComboBox();
        
        // student combo boxes
        rebuildCurrentStudentComboBox();
        rebuildDropStudentComboBox();
        
        // course Combo boxes
        rebuildCourseComboBox();
        rebuildDisplayCourseList();
        rebuildAdminCourseDropComboBox();
        
        //schedule combo box
        rebuildStudentScheduleComboBox();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        semesterChange = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        newSemesterName = new javax.swing.JTextField();
        submitSemester = new javax.swing.JButton();
        semesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        courseCodeEntry = new javax.swing.JTextField();
        courseDescriptionEntry = new javax.swing.JTextField();
        courseSeatEntry = new javax.swing.JTextField();
        submitCourse = new javax.swing.JToggleButton();
        courseStatusLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lastNameEntry = new javax.swing.JTextField();
        studentIDEntry = new javax.swing.JTextField();
        firstNameEntry = new javax.swing.JTextField();
        submitStudent = new javax.swing.JButton();
        studentStatus = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        displayCourseList = new javax.swing.JComboBox<>();
        adminDisplayCourseList = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        scheduledStudentsTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        waitlistedTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        dropStudentComboBox = new javax.swing.JComboBox<>();
        dropStudentButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        droppedStudentTextArea = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        adminDropCourseComboBox = new javax.swing.JComboBox<>();
        adminDropCourseButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        adminDropCourseTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        Jtabbedpanel555 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        displayCourses = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        courseTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        displaySchedule = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        courseComboBox = new javax.swing.JComboBox<>();
        scheduleButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        scheduleStatusLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        dropCourseTextArea = new javax.swing.JTextArea();
        courseDropCourseComboBox = new javax.swing.JComboBox<>();
        dropCourseButton = new javax.swing.JButton();
        currentStudentComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        changeStudentButton = new javax.swing.JButton();
        currentStudentLabel = new javax.swing.JLabel();
        studentLabel = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        semesterBox = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Schedule Builder");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Schedule Builder");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Current Semester: ");

        semesterChange.setText("Change Semester");
        semesterChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterChangeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Enter semester name:");

        submitSemester.setText("Submit");
        submitSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitSemesterActionPerformed(evt);
            }
        });

        semesterStatusLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        semesterStatusLabel.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(semesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newSemesterName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(submitSemester)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(newSemesterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitSemester))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(semesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Enter course code:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Enter description:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Enter seats:");

        submitCourse.setText("Submit");
        submitCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitCourseActionPerformed(evt);
            }
        });

        courseStatusLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(courseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(374, 374, 374))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseDescriptionEntry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseSeatEntry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(submitCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(courseCodeEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(courseCodeEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(courseDescriptionEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseSeatEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(submitCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(courseStatusLabel)
                .addGap(19, 19, 19))
        );

        jTabbedPane2.addTab("Add Course", jPanel4);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Enter student ID:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Enter first name:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Enter last name:");

        submitStudent.setText("Submit");
        submitStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitStudentActionPerformed(evt);
            }
        });

        studentStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lastNameEntry, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addComponent(firstNameEntry)
                                .addComponent(studentIDEntry))
                            .addComponent(submitStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(397, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(studentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(studentIDEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(firstNameEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lastNameEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitStudent)
                .addGap(18, 18, 18)
                .addComponent(studentStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jTabbedPane2.addTab("Add Student", jPanel5);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Select Course:");

        displayCourseList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminDisplayCourseList.setText("Display");
        adminDisplayCourseList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDisplayCourseListActionPerformed(evt);
            }
        });

        scheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane5.setViewportView(scheduledStudentsTable);

        waitlistedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane6.setViewportView(waitlistedTable);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Scheduled Students");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Waitlisted Students");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(displayCourseList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adminDisplayCourseList))
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(74, 74, 74))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(displayCourseList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDisplayCourseList))
                .addGap(30, 30, 30)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );

        jTabbedPane2.addTab("Display Course List of Students", jPanel10);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Select Student:");

        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropStudentButton.setText("Drop Student");
        dropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentButtonActionPerformed(evt);
            }
        });

        droppedStudentTextArea.setColumns(20);
        droppedStudentTextArea.setRows(5);
        jScrollPane7.setViewportView(droppedStudentTextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dropStudentButton)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropStudentButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel11);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Select Course to be Dropped:");

        adminDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminDropCourseButton.setText("Drop Course");
        adminDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropCourseButtonActionPerformed(evt);
            }
        });

        adminDropCourseTextArea.setColumns(20);
        adminDropCourseTextArea.setRows(5);
        jScrollPane8.setViewportView(adminDropCourseTextArea);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(adminDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adminDropCourseButton)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(adminDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropCourseButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Course", jPanel12);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        displayCourses.setText("Display");
        displayCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCoursesActionPerformed(evt);
            }
        });

        courseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane2.setViewportView(courseTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayCourses)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(208, 208, 208))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayCourses)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        Jtabbedpanel555.addTab("Display Courses", jPanel6);

        displaySchedule.setText("Display");
        displaySchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleActionPerformed(evt);
            }
        });

        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane3.setViewportView(scheduleTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displaySchedule)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(502, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displaySchedule)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Jtabbedpanel555.addTab("Display Schedule", jPanel7);

        scheduleButton.setText("Schedule");
        scheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Select Course:");

        scheduleStatusLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(scheduleStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 85, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 214, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduleButton)
                            .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(283, 283, 283))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(scheduleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(scheduleStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        Jtabbedpanel555.addTab("Schedule Courses", jPanel8);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Select Course:");

        dropCourseTextArea.setColumns(20);
        dropCourseTextArea.setRows(5);
        jScrollPane4.setViewportView(dropCourseTextArea);

        dropCourseButton.setText("Drop Course");
        dropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(courseDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(dropCourseButton)))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(courseDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dropCourseButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        Jtabbedpanel555.addTab("Drop Course", jPanel9);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Current Student:");

        changeStudentButton.setText("Change Student");
        changeStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeStudentButtonActionPerformed(evt);
            }
        });

        currentStudentLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jtabbedpanel555)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(currentStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(282, 282, 282))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(studentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(currentStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(changeStudentButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(currentStudentLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(currentStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeStudentButton)
                            .addComponent(studentLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Jtabbedpanel555, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Student", jPanel2);

        currentSemesterLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        currentSemesterLabel.setText("      ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(semesterBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(semesterChange)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semesterChange, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(semesterBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane1))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("tabbedpane1");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void semesterChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterChangeActionPerformed
        // TODO add your handling code here:
        
        String name = (String)(semesterBox.getSelectedItem());
        
        if (!name.equals("")){
            currentSemester = name;
            currentSemesterLabel.setText(currentSemester);
            
            rebuildCourseComboBox();
            rebuildAdminCourseDropComboBox();
            rebuildStudentScheduleComboBox();
            rebuildDisplayCourseList();
        }
    }//GEN-LAST:event_semesterChangeActionPerformed
    
    
    public void rebuildSemesterComboBox(){
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        semesterBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        
        if(semesters.size() > 0){
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        }
        else{
            currentSemesterLabel.setText("None, add semester.");
            currentSemester = "None";
        }
    }
    public void rebuildDropStudentComboBox(){
        dropStudentComboBox.removeAllItems();
        
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<String> studentNames = new ArrayList();
        if (students.size() > 0){
            for(StudentEntry student: students){
                studentNames.add(student.getLastName() + ", " + student.getFirstName());
            }
        
            dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
            currentStudent = students.get(dropStudentComboBox.getSelectedIndex());
            studentLabel.setText(currentStudent.getLastName() + ", " + currentStudent.getFirstName() + " " + currentStudent.getStudentID());
        }
    }
    public void rebuildCurrentStudentComboBox(){
        currentStudentComboBox.removeAllItems();
        
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<String> studentNames = new ArrayList();
        if (students.size() > 0){
            for(StudentEntry student: students){
                studentNames.add(student.getLastName() + ", " + student.getFirstName());
            }
        
            currentStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
            currentStudent = students.get(currentStudentComboBox.getSelectedIndex());
            studentLabel.setText(currentStudent.getLastName() + ", " + currentStudent.getFirstName() + " " + currentStudent.getStudentID());
            
            rebuildStudentScheduleComboBox();
        }
    }
    
    public void rebuildStudentScheduleComboBox(){
        courseDropCourseComboBox.removeAllItems();
        
        if(currentStudent != null){
            ArrayList<ScheduleEntry> courses = ScheduleQueries.getScheduleByStudent(currentSemester, currentStudent.getStudentID());
            ArrayList<String> courseCodes = new ArrayList();

            if(courses.size() > 0){
                for(ScheduleEntry course: courses){
                    courseCodes.add(course.getCourseCode());
                }
                courseDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
            }
        }
    }
    
    public void rebuildCourseComboBox(){
        courseComboBox.removeAllItems();
        
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        ArrayList<String> courseDescriptions = new ArrayList();
        
        if(courses.size() > 0){
            for(CourseEntry course: courses){
                courseDescriptions.add(course.getCourseCode());
            }
            
            
            courseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseDescriptions.toArray()));
        
            currentCourse = courses.get(courseComboBox.getSelectedIndex());
        }
    }
    
    public void rebuildAdminCourseDropComboBox(){
        adminDropCourseComboBox.removeAllItems();
        
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        ArrayList<String> courseDescriptions = new ArrayList();
        
        if(courses.size() > 0){
            for(CourseEntry course: courses){
                courseDescriptions.add(course.getCourseCode());
            }
            
            adminDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel (courseDescriptions.toArray()));
        }
    }
    
    public void rebuildDisplayCourseList(){
        displayCourseList.removeAllItems();
        
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        ArrayList<String> courseDescriptions = new ArrayList();
        
        if(courses.size() > 0){
            for(CourseEntry course: courses){
                courseDescriptions.add(course.getCourseCode());
            }
            
            
            displayCourseList.setModel(new javax.swing.DefaultComboBoxModel(courseDescriptions.toArray()));
        
            currentCourse = courses.get(displayCourseList.getSelectedIndex());
        }
    
    }
    
    
    private void submitSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitSemesterActionPerformed
        // TODO add your handling code here:
        String name = newSemesterName.getText();
        
        if (name.equals("")){
            semesterStatusLabel.setText("Unable to add a semester without a name");
        }
        else{
            SemesterQueries.addSemester(name.toLowerCase());
            newSemesterName.setText("");
            semesterStatusLabel.setText("Semester " + name + " added");
            rebuildSemesterComboBox();
        }
    }//GEN-LAST:event_submitSemesterActionPerformed

    private void submitCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitCourseActionPerformed
        // TODO add your handling code here:
        String code = courseCodeEntry.getText();
        String description = courseDescriptionEntry.getText();
        int seats = Integer.parseInt(courseSeatEntry.getText());
        
        if (code.equals("") || description.equals("")){
            courseStatusLabel.setText("Please enter valid information");
        }
        else{
            courseStatusLabel.setText("Course " + code + " added");
            
            CourseEntry course = new CourseEntry(currentSemester, code, description, seats);
            CourseQueries.addCourse(course);
            
            rebuildCourseComboBox();
            rebuildDisplayCourseList();
            rebuildAdminCourseDropComboBox();
            courseCodeEntry.setText("");
            courseDescriptionEntry.setText("");
            courseSeatEntry.setText("");
        }
    }//GEN-LAST:event_submitCourseActionPerformed

    private void submitStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitStudentActionPerformed
        // TODO add your handling code here:
        String studentID = studentIDEntry.getText();
        String firstName = firstNameEntry.getText();
        String lastName = lastNameEntry.getText();
        
        if(studentID.equals("")){
            studentStatus.setText("Invalid input");
        }
        else{
            studentStatus.setText(studentID + " added");
            
            StudentEntry student = new StudentEntry(studentID, firstName, lastName);
            StudentQueries.addStudent(student);
            rebuildCurrentStudentComboBox();
            rebuildStudentScheduleComboBox();
            rebuildDropStudentComboBox();
            
            studentIDEntry.setText("");
            firstNameEntry.setText("");
            lastNameEntry.setText("");
        }
    }//GEN-LAST:event_submitStudentActionPerformed

    private void displayScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleActionPerformed
           
        currentStudent = StudentQueries.getAllStudents().get(currentStudentComboBox.getSelectedIndex());
        
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, currentStudent.getStudentID());
        DefaultTableModel displayScheduleTableModel = (DefaultTableModel)scheduleTable.getModel();
        
        displayScheduleTableModel.setNumRows(0);
        Object[] rowData = new Object[2];
        
        for(ScheduleEntry course: schedule){
            rowData[0] = course.getCourseCode();
            
            if(course.getStatus().equals("s")){
                rowData[1] = "Scheduled";
            }
            else{
                rowData[1] = "Waitlisted";
            }
            displayScheduleTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayScheduleActionPerformed

    private void scheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleButtonActionPerformed
        
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        
        if(students.size() > 0 && courses.size() > 0){
            currentCourse = courses.get(courseComboBox.getSelectedIndex());
            
            java.sql.Timestamp timeStamp = new java.sql.Timestamp(java.util.Calendar.getInstance().getTime().getTime());
            
            if(CourseQueries.getCourseSeats(currentSemester, currentCourse.getCourseCode()) > ScheduleQueries.getScheduleByCount(currentSemester, currentCourse.getCourseCode())){
                ScheduleEntry schedule = new ScheduleEntry(currentSemester, currentCourse.getCourseCode(), currentStudent.getStudentID(), "s", timeStamp);
                ScheduleQueries.addScheduleEntry(schedule);
                
                scheduleStatusLabel.setText(currentStudent.getFirstName() + " scheduled for " + currentCourse.getCourseCode());
            }
            
            else{
                ScheduleEntry schedule = new ScheduleEntry(currentSemester, currentCourse.getCourseCode(), currentStudent.getStudentID(), "w", timeStamp);
                ScheduleQueries.addScheduleEntry(schedule);
                
                scheduleStatusLabel.setText(currentStudent.getFirstName() + " waitlisted for " + currentCourse.getCourseCode());
            }
        }
        rebuildStudentScheduleComboBox();
    }//GEN-LAST:event_scheduleButtonActionPerformed

    private void displayCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCoursesActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCourseTableModel = (DefaultTableModel)courseTable.getModel();
        
        displayCourseTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        
        for(CourseEntry course: courses){
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getDescription();
            rowData[2] = course.getSeats();
            displayCourseTableModel.addRow(rowData);
        }   
    }//GEN-LAST:event_displayCoursesActionPerformed

    private void dropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropCourseButtonActionPerformed
        // TODO add your handling code here:
        dropCourseTextArea.setText("");
        
        ScheduleEntry droppedCourse = ScheduleQueries.getScheduleByStudent(currentSemester, currentStudent.getStudentID()).get(courseDropCourseComboBox.getSelectedIndex());
        
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, currentStudent.getStudentID(), droppedCourse.getCourseCode());
        
        if(droppedCourse.getStatus().equals("s")){
            dropCourseTextArea.append(currentStudent.getLastName() + ", " + currentStudent.getFirstName() + " " + currentStudent.getStudentID() + " had been dropped from " + droppedCourse.getCourseCode() + "\n");
            
            ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, droppedCourse.getCourseCode());
            
            if(waitlist.size() >0 ){
                ScheduleQueries.updateScheduleEntry(currentSemester, waitlist.get(0));
                
                StudentEntry student = StudentQueries.getStudent(waitlist.get(0).getStudentID());
                
                dropCourseTextArea.append(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID() + " had been scheduled into " + droppedCourse.getCourseCode() + "\n");
            }
        }
        else{
            dropCourseTextArea.append(currentStudent.getLastName() + ", " + currentStudent.getFirstName() + " " + currentStudent.getStudentID() + " had been dropped from the waitlist for " + droppedCourse.getCourseCode() + "\n");
        }
            
        rebuildCurrentStudentComboBox();
        rebuildDropStudentComboBox();
    }//GEN-LAST:event_dropCourseButtonActionPerformed

    private void changeStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeStudentButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        
        if (students.size() > 0){
            currentStudent = students.get(currentStudentComboBox.getSelectedIndex());
            studentLabel.setText(currentStudent.getLastName() + ", " + currentStudent.getFirstName() + " " + currentStudent.getStudentID());
            
            rebuildCourseComboBox();
            rebuildStudentScheduleComboBox();
        }
    }//GEN-LAST:event_changeStudentButtonActionPerformed

    private void adminDisplayCourseListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDisplayCourseListActionPerformed
        // TODO add your handling code here:
        currentCourse = CourseQueries.getAllCourses(currentSemester).get(displayCourseList.getSelectedIndex());
        
        ArrayList<ScheduleEntry> scheduledStudents = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, currentCourse.getCourseCode());
        ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, currentCourse.getCourseCode());
        
        DefaultTableModel displayScheduledTableModel = (DefaultTableModel)scheduledStudentsTable.getModel();
        DefaultTableModel displayWaitlistedTableModel = (DefaultTableModel)waitlistedTable.getModel();
        
        displayScheduledTableModel.setNumRows(0);
        Object[] scheduledData = new Object[3];
        
        for(ScheduleEntry entry: scheduledStudents){
            StudentEntry student = StudentQueries.getStudent(entry.getStudentID());
            scheduledData[0] = student.getLastName();
            scheduledData[1] = student.getFirstName();
            scheduledData[2] = student.getStudentID();
            displayScheduledTableModel.addRow(scheduledData);
        }
        
        displayWaitlistedTableModel.setNumRows(0);
        Object[] waitlistedData = new Object[3];
        
        for(ScheduleEntry entry: waitlistedStudents){
            StudentEntry student = StudentQueries.getStudent(entry.getStudentID());
            waitlistedData[0] = student.getLastName();
            waitlistedData[1] = student.getFirstName();
            waitlistedData[2] = student.getStudentID();
            displayWaitlistedTableModel.addRow(waitlistedData);
        }
    }//GEN-LAST:event_adminDisplayCourseListActionPerformed

    private void dropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentButtonActionPerformed
        // TODO add your handling code here:
        StudentEntry droppedStudent = StudentQueries.getAllStudents().get(dropStudentComboBox.getSelectedIndex());
        
        StudentQueries.dropStudent(droppedStudent.getStudentID());
        
        droppedStudentTextArea.setText("");
        
        ArrayList<String> updates = new ArrayList();
        updates.add(droppedStudent.getLastName() + ", " + droppedStudent.getFirstName() +" "+ droppedStudent.getStudentID() + " has been dropped from the list of students\n");
        
        for(String semester: SemesterQueries.getSemesterList()){
            updates.add("\n" + "For Semester: " +semester + "\n");
            
            for(ScheduleEntry course: ScheduleQueries.getScheduleByStudent(semester, droppedStudent.getStudentID())){
                ScheduleQueries.dropStudentScheduleByCourse(semester, droppedStudent.getStudentID(), course.getCourseCode());
                
                if (course.getStatus().equals("s")){
                    updates.add(droppedStudent.getLastName() + ", " + droppedStudent.getFirstName() + " " + droppedStudent.getStudentID() + " has been dropped from " + course.getCourseCode() + "\n");
                    
                    ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(semester, course.getCourseCode());
                    
                    if(waitlist.size() > 0){
                        
                        ScheduleQueries.updateScheduleEntry(semester, waitlist.get(0));
                        
                        StudentEntry student = StudentQueries.getStudent(waitlist.get(0).getStudentID());
                        
                        updates.add(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID() + " has been scheduled into " + course.getCourseCode() + "\n");
                    }
                }
                else{
                    updates.add(droppedStudent.getLastName() + ", " + droppedStudent.getFirstName() + " " + droppedStudent.getStudentID() + " has been dropped form the waitlist for " + course.getCourseCode() + "\n");
                }
            }
        }
        
        for(String update : updates){
            droppedStudentTextArea.append(update);
        }
        
        // rebuild student combo box methods
        rebuildCurrentStudentComboBox();
        rebuildDropStudentComboBox();
    }//GEN-LAST:event_dropStudentButtonActionPerformed

    private void adminDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropCourseButtonActionPerformed
        // TODO add your handling code here:
        adminDropCourseTextArea.setText("");
        CourseEntry course = CourseQueries.getAllCourses(currentSemester).get(adminDropCourseComboBox.getSelectedIndex());
        
        CourseQueries.dropCourse(currentSemester, course.getCourseCode());
        adminDropCourseTextArea.append("Scheduled students dropped from the course:\n");
        
        
        ArrayList<ScheduleEntry> scheduledStudents = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, course.getCourseCode());
        ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, course.getCourseCode());
        
        ScheduleQueries.dropScheduleByCourse(currentSemester, course.getCourseCode());
        
        for(ScheduleEntry entry: scheduledStudents){
            StudentEntry student = StudentQueries.getStudent(entry.getStudentID());
            adminDropCourseTextArea.append(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID() + "\n");
        }
        
        adminDropCourseTextArea.append("\nWaitlisted students dropped form the course:\n");
        
        for(ScheduleEntry entry: waitlist){
            StudentEntry student = StudentQueries.getStudent(entry.getStudentID());
            adminDropCourseTextArea.append(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID() + "\n");
        }
        
        rebuildCourseComboBox();
        rebuildDisplayCourseList();
        rebuildAdminCourseDropComboBox();
    }//GEN-LAST:event_adminDropCourseButtonActionPerformed
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScheduleBuilderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScheduleBuilderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScheduleBuilderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScheduleBuilderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScheduleBuilderGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Jtabbedpanel555;
    private javax.swing.JButton adminDisplayCourseList;
    private javax.swing.JButton adminDropCourseButton;
    private javax.swing.JComboBox<String> adminDropCourseComboBox;
    private javax.swing.JTextArea adminDropCourseTextArea;
    private javax.swing.JButton changeStudentButton;
    private javax.swing.JTextField courseCodeEntry;
    private javax.swing.JComboBox<String> courseComboBox;
    private javax.swing.JTextField courseDescriptionEntry;
    private javax.swing.JComboBox<String> courseDropCourseComboBox;
    private javax.swing.JTextField courseSeatEntry;
    private javax.swing.JLabel courseStatusLabel;
    private javax.swing.JTable courseTable;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JComboBox<String> currentStudentComboBox;
    private javax.swing.JLabel currentStudentLabel;
    private javax.swing.JComboBox<String> displayCourseList;
    private javax.swing.JButton displayCourses;
    private javax.swing.JButton displaySchedule;
    private javax.swing.JButton dropCourseButton;
    private javax.swing.JTextArea dropCourseTextArea;
    private javax.swing.JButton dropStudentButton;
    private javax.swing.JComboBox<String> dropStudentComboBox;
    private javax.swing.JTextArea droppedStudentTextArea;
    private javax.swing.JTextField firstNameEntry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastNameEntry;
    private javax.swing.JTextField newSemesterName;
    private javax.swing.JButton scheduleButton;
    private javax.swing.JLabel scheduleStatusLabel;
    private javax.swing.JTable scheduleTable;
    private javax.swing.JTable scheduledStudentsTable;
    private javax.swing.JComboBox<String> semesterBox;
    private javax.swing.JButton semesterChange;
    private javax.swing.JLabel semesterStatusLabel;
    private javax.swing.JTextField studentIDEntry;
    private javax.swing.JLabel studentLabel;
    private javax.swing.JLabel studentStatus;
    private javax.swing.JToggleButton submitCourse;
    private javax.swing.JButton submitSemester;
    private javax.swing.JButton submitStudent;
    private javax.swing.JTable waitlistedTable;
    // End of variables declaration//GEN-END:variables
}
